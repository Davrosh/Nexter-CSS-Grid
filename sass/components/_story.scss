.story {
  &__pictures {
    background-color: $color-primary;
    grid-column: full-start / col-end 4;

    /*
        background image
        linear gradient with two equal colors trick for nice overlay effect
    */
    background-image: linear-gradient(
        rgba($color-primary, 0.5),
        rgba($color-primary, 0.5)
      ),
      url(../img/back.jpg);
    background-size: cover;

    /*
        uses a 6x6 grid to position the two overlapping images
        the two cols on either side let us center the image exactly in the
        middle.
    */
    display: grid;
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);

    /*
        aligns grid items to their grid cells in the column axis
    */
    align-items: center;

    /*
      pictures span the width with some padding
    */
    @media only screen and (max-width: $bp-medium) {
      grid-column: 1 / -1;
      padding: 6rem;
    }
  }

  &__img--1 {
    /*
        images have an intrinsic aspect ratio associated with them and so they
        do not expand to fit their area of the grid
    */
    width: 100%;
    grid-row: 2 / 6;
    grid-column: 2 / 6;
    box-shadow: 0 2rem 5rem rgba(#000, 0.1);

    /*
      the first image spans most of the pictures grid columns and all the rows
    */
    @media only screen and (max-width: $bp-medium) {
      grid-column: 1 / 5;
      grid-row: 1 / -1;
    }
  }

  &__img--2 {
    /*
        for the schick overflow effect
    */
    width: 115%;
    grid-row: 4 / 6;
    grid-column: 4 / 7;

    /*
        for the schick overflow effect
    */
    z-index: 20;

    box-shadow: 0 2rem 5rem rgba(#000, 0.2);

    /*
      second pic also span all rows in pictures grid, make it less large
    */
    @media only screen and (max-width: $bp-medium) {
      grid-row: 1 / -1;
      width: 100%;
    }
  }

  &__content {
    background-color: $color-grey-light-1;
    grid-column: col-start 5 / full-end;

    padding: 6rem 8vw;

    /*
            Alternative approach
        */
    /*
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
        */

    display: grid;

    /*
            Justifies ALL GRID CONTENT on column axis when total grid size is
            smaller than container. 
        */
    align-content: center;

    /*
            Aligns content in a grid item along the ROW axis.

            the button is now shoved to the left and is no longer stretched out
            across the entire row.
        */
    justify-items: start;

    /*
      story content spans width
      places the row explicitly - below the features and above the pictures
    */
    @media only screen and (max-width: $bp-medium) {
      grid-column: 1 / -1;
      grid-row: 5 / 6;
    }
  }

  &__text {
    font-size: 1.5rem;
    font-style: italic;

    /*
            not a reusable element so we can afford to hard-code a margin-bottom
        */
    margin-bottom: 4rem;
  }
}

