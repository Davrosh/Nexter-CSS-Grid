.homes {
    grid-column: center-start / center-end;
    margin: 15rem 0;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    gap: 7rem;
}

.home {
    background-color: $color-grey-light-1;

    /*
        many times we set the columns and have css calc the rows automatically
    */
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    row-gap: 3.5rem;

    &__img {
        width: 100%;
        /*
            we need to specify this explicitly otherwise the heart icon will
            push the image down
        */
        grid-row: 1 / 2;
        grid-column: 1 / -1;
        z-index: 1;
    }

    &__like {
        grid-row: 1 / 2;
        grid-column: 2 / 3;

        fill: $color-primary;

        height: 2.5rem;
        width: 2.5rem;

        z-index: 2;

        /*
            align a specific item inside a grid cell
        */
        justify-self: end;
        margin: 1rem;
    }

    &__name {
        /*
            Actually in the picture's row, spanning all columns
            
            We could also consider not specifying a row and then it would be in
            below that of the image and then proceed to translate it upwards -
            this would create a half empty row that isn't used for anything and
            and an extra gap - our solution doesn't have that.
        */
        grid-row: 1 / 2;
        grid-column: 1 / -1;
        /*
            In its cell - center of line and at the bottom 
        */
        justify-self: center;
        align-self: end;

        /*
            explicit z-index, above the image
        */
        z-index: 3;

        width: 80%;
        font-family: $font-display;
        font-size: 1.6rem;
        text-align: center;
        padding: 1.25rem;
        background-color: $color-secondary;
        color: #fff;
        font-weight: 400;

        /*
            slightly overflowing below the image, 50% of the element itself
        */
        transform: translateY(50%);
    }

    /*
        we add a margin at the top because we can't have different row gaps and
        we want more space
    */
    &__location,
    &__rooms {
        margin-top: 2.5rem;
    }

    &__location,
    &__rooms,
    &__area,
    &__price {

        font-size: 1.5rem;
        margin-left: 2rem;

        /*
            group together and align vertically
        */
        display: flex;
        align-items: center;
        

        svg {
            fill: $color-primary;
            height: 2rem;
            width: 2rem;
            margin-right: 1rem;
        }
    }

    /*
        button span all columns
    */
    &__btn {
        grid-column: 1 / -1;
    }
}